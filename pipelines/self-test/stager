#!/usr/bin/env python
"""
Usage:
    stager INDIR OUTDIR STAGE

Options:
    INDIR   Input directory

    OUTDIR  Output directory

    STAGE   The stage to execute. Supported stages:
              build - Compile all python sources
              test - Runs the test suite
              crash - Crashes
              fail - Doesn't end successfully
              success - Ends successfully
              loop - Succeeds and sets next stage to loop-1
              loop-N - Succeeds and set next stage to loop-(N+1)
"""
import os
import sys
import json


def main(args):
    # print("STAGER:", args)
    os.environ['PATH'] = '/home/turtle/py/bin:' + os.environ['PATH']
    indir, outdir, stage = args[:3]
    samedir = os.stat(indir).st_ino == os.stat(outdir).st_ino
    if stage == "build":
        import shutil
        import compileall
        if samedir:
            print("Warning:", indir, 'and', outdir, 'is the same')
        else:
            shutil.copytree(indir + '/turtles', outdir + '/turtles')
        compileall.compile_dir(outdir + '/turtles')
        res = {'-s': 'test'}
    elif stage == 'test':
        import subprocess
        subprocess.check_call('pip install nose'.split())
        subprocess.check_call(('pip install -r ' + indir + '/requirements.txt').split())
        os.chdir(outdir + '')
        subprocess.check_output('nosetests -w /output --doctest-tests'.split())
        res = {'success': True}
    elif stage == 'loop':
        res = {'-s': 'loop-1'}
    elif stage.startswith('loop-'):
        n = int(stage.split('-', 1)[-1])
        res = {'-s': 'loop-%d' % (n + 1)}
    elif stage == 'crash':
        raise Exception("Failed on purpose!")
    elif stage == 'fail':
        sys.exit("Failed as per your request")
    elif stage == 'success':
        res = {}
    else:
        raise Exception("Unsupported stage: " + stage)

    with open(outdir + '/result.json', 'w') as fout:
        json.dump(res, fout)


if __name__ == '__main__':
    main(sys.argv[1:])
